// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// do_mv
arma::vec do_mv(const arma::mat& m, const arma::vec& v);
RcppExport SEXP _panelGMM_do_mv(SEXP mSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type v(vSEXP);
    rcpp_result_gen = Rcpp::wrap(do_mv(m, v));
    return rcpp_result_gen;
END_RCPP
}
// do_ZuuZ
arma::field<arma::mat> do_ZuuZ(const arma::mat& Z, const arma::vec& e, int n, int t);
RcppExport SEXP _panelGMM_do_ZuuZ(SEXP ZSEXP, SEXP eSEXP, SEXP nSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(do_ZuuZ(Z, e, n, t));
    return rcpp_result_gen;
END_RCPP
}
// do_Zu
arma::field<arma::mat> do_Zu(const arma::mat& Z, const arma::vec& e, int n, int t);
RcppExport SEXP _panelGMM_do_Zu(SEXP ZSEXP, SEXP eSEXP, SEXP nSEXP, SEXP tSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type e(eSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type t(tSEXP);
    rcpp_result_gen = Rcpp::wrap(do_Zu(Z, e, n, t));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_panelGMM_do_mv", (DL_FUNC) &_panelGMM_do_mv, 2},
    {"_panelGMM_do_ZuuZ", (DL_FUNC) &_panelGMM_do_ZuuZ, 4},
    {"_panelGMM_do_Zu", (DL_FUNC) &_panelGMM_do_Zu, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_panelGMM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
